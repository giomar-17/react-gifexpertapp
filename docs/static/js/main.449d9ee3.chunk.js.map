{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAoB/C,OAEI,0BAAMC,SAfU,SAACC,GACjBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAYd,2BACAO,KAAK,OACLC,MAAST,EACTU,SAzBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCJhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAWH,GAFhD,+DAGCI,MAAOF,GAHR,cAGZG,EAHY,gBAIMA,EAAKC,OAJX,uBAIVC,EAJU,EAIVA,KAEFC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAeXM,GAfW,4CAAH,sDCAVO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAKjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAOf,EAAMgB,IAAMN,IACxB,+BAAKA,EAAL,OCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAd,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAL0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA+BvC,OAtBIC,qBAAW,WAGPxB,EAAQC,GACPwB,MAAM,SAAAC,GAECH,EAAS,CACTf,KAAMkB,EACNL,SAAS,SAMnB,CAACpB,IAQAqB,ED5B6BK,CAAa1B,GAAhCa,EAHoB,EAGzBN,KAAaa,EAHY,EAGZA,QAOzB,OACI,oCACS,wBAAIJ,UAAU,qCAAd,IAAqDhB,GAEpDoB,GAAU,uBAAGJ,UAAU,oCAAb,WAEV,yBAAKA,UAAU,aAGbH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAEAiB,IAAMjB,EAAIC,IAELD,UExBhBkB,EAAe,WAAO,IAAD,EAGM1C,mBAAS,CAAE,gBAHjB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAW9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAKA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OAGpB,kBAAC,EAAD,CACI2B,IAAO3B,EACPA,SAAaA,UC1BzC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.449d9ee3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {        \r\n        setInputValue( e.target.value );\r\n\r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n        //console.log('Sumit OK');\r\n        \r\n\r\n    }\r\n \r\n    return (\r\n     \r\n        <form onSubmit= { handleSumit }>\r\n           \r\n            <input \r\n            type=\"text\"   \r\n            value= { inputValue }      \r\n            onChange= { handleInputChange }   \r\n            />\r\n        </form>    \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n   export const getGifs = async(category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=qFLmPKI7TtFkm7q2MtCn0CxEylC0PPTM`;\r\n        const resp = await fetch( url );\r\n        const { data }  = await resp.json();\r\n\r\n        const gifs =data.map( img => {\r\n            return { \r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url} ) => {\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= { url } alt= {title} />\r\n            <p> {title} </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n       \r\n        const { data:images, loading} = useFechGifs( category );\r\n\r\n        \r\n\r\n      \r\n\r\n\r\n    return (\r\n        <>\r\n                 <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\r\n\r\n                { loading &&<p className=\"animate__animated animate__flash\">Loading</p>}\r\n                        \r\n                { <div className=\"card-grid\">\r\n                    \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                        \r\n                        key={ img.id}\r\n\r\n                        { ...img }\r\n                        />\r\n                    )\r\n                        )             \r\n                    \r\n                    }          \r\n                \r\n                \r\n                </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs} from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFechGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        \r\n        data: [],\r\n        loading: true\r\n        \r\n    });\r\n\r\n        useEffect( ()=> {\r\n\r\n            \r\n            getGifs(category)\r\n            .then( imgs => {      \r\n\r\n                    setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n             \r\n                \r\n            })\r\n\r\n        },[category])\r\n\r\n        \r\n\r\n          \r\n        \r\n\r\n        \r\n    return state; // { data:[], loading:true}\r\n }","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   \r\n    const [categories, setCategories] = useState([ 'Dragon Ball']);\r\n\r\n//const hamdleAdd = () => {\r\n    //'hunter x hunter\r\n  //  setCategories(cats => [...cats,  'Tundercats' ] );\r\n\r\n//}\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n           \r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n\r\n                                              \r\n                        <GifGrid \r\n                            key= { category }\r\n                            category = { category }\r\n                        \r\n                        />\r\n                    ))\r\n                }\r\n                            \r\n            \r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// Gif expertApp\n// <h2>Gif</h2>\n//<hr />\n\n\n\n"],"sourceRoot":""}